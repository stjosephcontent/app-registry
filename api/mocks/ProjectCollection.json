/* A pseudo sample of what the Project Collection in MongoDB might look like */

[
   {
      "name": "orchestra",
      "fullname": "SJC Applications Orchestra",
      "description": "Orchestrates and automates the creation and management of SJC applications.",
      "homepage": "https://stjosephcontent.atlassian.net/wiki/display/CLI/Orchestra",

      "applications": {

         "app-reg": {
            "slug": "app-reg",
            "name": "SJC Application Registry",
            "description": "Implements a queryable list of officially supported SJC applications.",
            "address": "app-reg.orchestra",
            "issues": "https://stjosephcontent.atlassian.net/secure/RapidBoard.jspa?rapidView=72",
            "docs": "https://stjosephcontent.atlassian.net/wiki/display/CLI/App+Registry",

            "remotes": {
               "not-origin-to-test-required-param": {
                  "ssh": "ssh://hello",
                  "https": "http://goodbye"
               },
               "origin": {
                  "ssh": "git@github.com:stjosephcontent/app-registry.git",
                  "https": "https://github.com/stjosephcontent/app-registry.git"
               }
            },

            "refs": { // Aka Git branches
               "reg-15-my-branch": {
                  "version": "1.3.1",
                  "hosts": { // List of all the hosts this application ref/branch has been deployed to
                     "dev-tforster": {
                        "hostname": "174.117.35.248",
                        "cnames": [ "localhost" ]
                     },
                     "seansMacBook": {
                        "hostname": "192.168.10.23",
                        "cnames": [ "localhost" ]
                     },
                     "stage": { // stage and prod are reserved words
                        "hostname": "stage.sjc.io",
                        "cname": ""
                     }
                  },

                  "testRunners": {
                     "angular": { },
                     "postman": { },
                     "server": { }
                  },

                  "commands": {
                     "command1": "by your command.",
                     "command2": "these are not the droids you are looking for."
                  },

                  /*
                  * Each service keyname is arbitrary but hopefully meaningful
                  * serviceDefinition is a direct copy of an existing service from the Services Mongo collection. Should it be a pointer or copy?
                  * The startup property is the script or executable to run when the service is booted
                  * External services are listed even though we don't host/dockerize them but so we can build a comprehensive picture of our application
                  */
                  "services": {
                     "MongoDb": {
                        "serviceDefinition": "#/Services/mongodb",
                        "description": "MongoDB backs app-reg for simple high-read, low-write throughput.",
                        "startup": "",
                        "host": "localhost"
                     },

                     "NodeApp": {
                        "serviceDefinition": "#/Services/nodejs",
                        "description": "NodeJS is used for the bulk of the API implementation.",
                        "startup": "server.js",
                        "host": "localhost",
                        "port": "3056",
                        "protocols": [ "http", "https" ]
                     },

                     "tumblr": { // Not really part of app-reg, just used to illustrate how a third party service might be defined.
                        "serviceDefinition": "#/Services/external",
                        "description": "Tumblr's API is used for a crude CMS.",
                        "startup": "",
                        "host": "api.tumblr.com",
                        "port": "443",
                        "protocols": [ "https" ]
                     }
                  }

               }
            },

            "tags": [ "registry", "directory-service", "applications" ],

            "audit": {
               "created": {
                  "by": "tforster",
                  "on": "2015-08-24T17:08:02.078Z"
               },
               "updated": {
                  "by": "smacdonald",
                  "on": "2015-08-24T17:08:02.078Z"
               }
            }
         }, // End Application


         "sjc-cli": {
            "slug": "sjc-cli",
            "name": "SJC CLI",
            "description": "A command line tool used to interact with SJC applications throughout their lifecycle.",
            "address": null, // to-do: how do we differentiate between servers, services and installed applications?
            "issues": "https://stjosephcontent.atlassian.net/secure/RapidBoard.jspa?rapidView=72",
            "docs": "https://stjosephcontent.atlassian.net/wiki/display/CLI/SJC-CLI",

            "remotes": {
               "origin": {
                  "ssh": "git@github.com:stjosephcontent/sjc-cli.git",
                  "https": "https://github.com/stjosephcontent/sjc-cli.git"
               }
            },

            "refs": {
               "cli-99-change-the-shade-of-black": {
                  "version": "0.2.9",
                  "hosts": { // List of all the hosts this application ref/branch has been deployed to
                     "seansMacBook": {
                        "hostname": "localhost",
                        "cnames": null // Since cli is an installed app it does not use a cname
                     }
                  },

                  "testRunners": {
                     "angular": { },
                     "postman": { },
                     "server": { }
                  },

                  "commands": {
                     "command1": "by your command.",
                     "command2": "these are not the droids you are looking for."

                  },

                  // Since cli is an installed application it does not require any dockerized services
                  "services": { }
               }
            },

            "tags": [
               "cli",
               "command-line",
               "tool",
               "utility",

            ],

            "audit": {
               "created": {
                  "by": "tforster",
                  "on": "2015-08-24T17:08:02.078Z"
               },
               "updated": {
                  "by": "smacdonald",
                  "on": "2015-08-24T17:08:02.078Z"
               }
            }
         } // End Application
      },

      "tags": [
         "cli",
         "command line",
         "registry",
         "app",
         "application",
         "directory",
         "directory service"
      ]
   },

   {
      "name": "cerebrum",
      "fullname": "Is there an official tag line for Cerebrum",
      "description": "And official description?",
      "homepage": "https://stjosephcontent.atlassian.net/wiki/display/CE/Cerebrum+Home",

      "applications": {
         "ce": {
            "slug": "ce",
            "name": "Cerebrum Content Manager",
            "description": "Implements the CMS portion of Cerebrum.",
            "address": "app-reg.orchestra",
            "issues": "https://stjosephcontent.atlassian.net/secure/RapidBoard.jspa?rapidView=43&projectKey=CE",
            "docs": "https://stjosephcontent.atlassian.net/wiki/display/CE/Cerebrum+Home",

            "remotes": {
               "origin": {
                  "ssh": "git@github.com:stjosephcontent/cerebrum.git",
                  "https": "https://github.com/stjosephcontent/cerebrum.git"
               }
            },

            "refs": { },

            "tags": { },

            "audit": {
               "created": {
                  "by": "tforster",
                  "on": "2015-08-24T17:08:02.078Z"
               },
               "updated": {
                  "by": "smacdonald",
                  "on": "2015-08-24T17:08:02.078Z"
               }
            }
         },

         "api": {
            "slug": "",
            "name": "",
            "description": "Implements the API.",
            "address": "api.cerebrum",
            "issues": "",
            "docs": "",

            "remotes": { },
            "refs": {
               "master": {
                  "version": "",
                  "hosts": { },
                  "testRunners": { },
                  "commands": { },
                  "services": { }
               }
            },
            "tags": { },
            "audit": { }
         },

         "web-client": {
            "slug": "",
            "name": "",
            "description": "An Angular 1.x driven web client.",
            "address": "www.cerebrum",
            "issues": "",
            "docs": "",

            "remotes": { },
            "refs": { },
            "tags": { },
            "audit": { }
         },

         "sizeify": {
            "slug": "",
            "name": "",
            "description": "Sizeify is an image resizing service.",
            "address": "app-reg.orchestra",
            "issues": "https://stjosephcontent.atlassian.net/secure/RapidBoard.jspa?rapidView=43&projectKey=CE",
            "docs": "https://stjosephcontent.atlassian.net/wiki/display/CE/Cerebrum+Home",

            "remotes": {
               "origin": {
                  "ssh": "git@github.com:stjosephcontent/sizeify-client.git",
                  "https": "https://github.com/stjosephcontent/sizeify-client.git"
               }
            },

            "refs": { },

            "tags": [ "image", "resize", "utility", "tool", "webservice", "service", "api" ],

            "audit": { }
         }
      },

      "tags": [ ],

      "audit": {
         "created": {
            "by": "tforster",
            "on": "2015-08-24T17:08:02.078Z"
         },
         "updated": {
            "by": "smacdonald",
            "on": "2015-08-24T17:08:02.078Z"
         }
      }
   }
]
